name: 'Continuous Delivery'

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    environment: production
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      # Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Solo ejecutar el paso de build y push cuando sea desde la rama main
      - name: Build and push
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' 
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: nicolaszagu/lmlatam:latest

      # Solo ejecutar el paso de build y push a otro tag cuando sea la rama develop
      - name: Build and push test
        if: github.ref == 'refs/heads/develop'  
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: nicolaszagu/lmlatam:test

  gcloud-upload:
    runs-on: ubuntu-latest
    needs: build-and-push-docker 
    environment: production
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      # Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' 
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCLOUDSECRET }}'
          token_format: 'access_token'

      - name: Deploy to Cloud Run
        id: deploy
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' 
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: mllatam
          image: docker.io/nicolaszagu/mllatam:latest